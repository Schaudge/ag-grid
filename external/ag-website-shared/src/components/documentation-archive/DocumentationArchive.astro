---
import { Icon } from '@ag-website-shared/components/icon/Icon';
import styles from './DocumentationArchive.module.scss';
import type { Library } from '@ag-grid-types';
import { getChangelogUrl } from '@ag-website-shared/utils/getChangelogUrl';
import { ArchiveLink } from './ArchiveLink';

interface Props {
    site: Library;
    versionsData: any[];
}

const { site, versionsData } = Astro.props as Props;

const getVersionType = (version: string) => {
    const [_, minor, patch] = version.split('.');

    if (patch !== '0') {
        return 'Patch';
    } else if (minor !== '0') {
        return 'Minor';
    } else {
        return 'Major';
    }
};

const isMajor = (version: string) => {
    return getVersionType(version) === 'Major';
};
---

<div class={styles.docsArchiveContainer}>
    <h1>Documentation Archive</h1>
    <p class={styles.description}>Review documentation for previous AG {site} versions.</p>

    <table class={styles.archiveTable}>
        {
            versionsData.slice(1).map(({ noArchive, version, versionType, date, noDocs }) => {
                if (noArchive) return;

                return (
                    <tr>
                        <td class="text-base text-monospace text-semibold">{version}</td>

                        <td>{date}</td>

                        <td>
                            <span class={isMajor(version) ? styles.major : undefined}>
                                {versionType || getVersionType(version)}
                            </span>
                        </td>

                        <td>
                            <a href={getChangelogUrl({ site, version })}>
                                Changelog <Icon name="arrowRight" />
                            </a>
                        </td>

                        <td>{!noDocs ? <ArchiveLink site={site} version={version} /> : null}</td>
                    </tr>
                );
            })
        }
    </table>
</div>
